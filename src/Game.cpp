#include "Game.h"
#include <iostream>
#include <fstream>
using namespace AN;
Game::Game(): p1_("Jugador 1"), p2_("Jugador 2"), currentPlayer_(0){}
void Game::newGame(){p1_.board().reset();p2_.board().reset();currentPlayer_=0;std::cout<<"Nueva partida iniciada.\n";}
bool Game::saveToFile(const std::string &f) const{std::ofstream ofs(f,std::ios::binary);if(!ofs)return false;p1_.serialize(ofs);p2_.serialize(ofs);ofs.write((char*)&currentPlayer_,sizeof(currentPlayer_));return true;}
bool Game::loadFromFile(const std::string &f){std::ifstream ifs(f,std::ios::binary);if(!ifs)return false;p1_.deserialize(ifs);p2_.deserialize(ifs);ifs.read((char*)&currentPlayer_,sizeof(currentPlayer_));return true;}
void Game::drawBoards() const{const Player&p=(currentPlayer_==0)?p1_:p2_;const Board&b=p.board();std::cout<<"Tablero de "<<p.name()<<":\n";for(int y=0;y<b.height();++y){for(int x=0;x<b.width();++x){auto v=b.raw()[y*b.width()+x];char ch='.';if(v==(uint8_t)Cell::Ship)ch='S';else if(v==(uint8_t)Cell::Hit)ch='X';else if(v==(uint8_t)Cell::Miss)ch='o';std::cout<<ch<<' ';}std::cout<<'\n';}} 
bool Game::askingPlaceShips(Player &p){std::cout<<"Coloque barcos (x1 y1 x2 y2), 'done' para terminar.\n";std::string line;while(true){std::cout<<p.name()<<"> ";if(!std::getline(std::cin,line))return false;if(line=="done")break;int x1,y1,x2,y2;if(sscanf(line.c_str(),"%d %d %d %d",&x1,&y1,&x2,&y2)==4){if(p.board().placeShip({x1,y1},{x2,y2}))std::cout<<"Barco colocado.\n";else std::cout<<"Error al colocar.\n";}else std::cout<<"Entrada inv치lida.\n";}return true;}
void Game::handleTurn(){Player&p=(currentPlayer_==0)?p1_:p2_;Player&op=(currentPlayer_==0)?p2_:p1_;std::cout<<"Turno de "<<p.name()<<"\n";drawBoards();std::cout<<"Comandos: shot x y, save, exit\n";std::string cmd;if(!(std::cin>>cmd))return;if(cmd=="shot"){int x,y;std::cin>>x>>y;bool hit=op.board().receiveShot({x,y});std::cout<<(hit?"Impacto!\n":"Agua.\n");if(op.board().allShipsSunk()){std::cout<<p.name()<<" gana!\n";exit(0);}currentPlayer_=1-currentPlayer_;}else if(cmd=="save"){if(saveToFile("savegame.bin"))std::cout<<"Guardado.\n";else std::cout<<"Error guardando.\n";}else if(cmd=="exit"){exit(0);}else{std::string rest;std::getline(std::cin,rest);std::cout<<"Comando inv치lido.\n";}} 
void Game::mainLoop(){std::cout<<"Bienvenido a Astucia Naval\nOpciones: new, load, quit\n";std::string opt;while(std::cin>>opt){if(opt=="new"){std::cin.ignore();newGame();std::cout<<"Nombre jugador 1: ";std::getline(std::cin,opt);p1_.setName(opt);std::cout<<"Nombre jugador 2: ";std::getline(std::cin,opt);p2_.setName(opt);askingPlaceShips(p1_);askingPlaceShips(p2_);while(true)handleTurn();}else if(opt=="load"){std::cin.ignore();if(loadFromFile("savegame.bin")){std::cout<<"Partida cargada.\n";while(true)handleTurn();}else std::cout<<"No se encontr칩 savegame.bin\n";}else if(opt=="quit"){break;}else std::cout<<"Comando inv치lido.\n";}}